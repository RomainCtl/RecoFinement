version: "3.7"

# =============================================================================
volumes:
# =============================================================================
  postgres_data:


# =============================================================================
services:
# =============================================================================

  # -------------------------------------------------------------------------
  api:
  # -------------------------------------------------------------------------
    build: ./services/api/
    container_name: api
    restart: on-failure
    expose:
      - 4040
    networks:
      - default
    env_file:
      - ./services/api/.env
    environment:
      DB_URL: db # override
      PIPENV_DONT_LOAD_ENV: 1
    depends_on:
      - db

  # -------------------------------------------------------------------------
  engine:
  # -------------------------------------------------------------------------
    build: ./services/reco_engine/
    container_name: engine
    restart: on-failure
    expose:
      - 4041
    networks:
      - default
    env_file:
      - ./services/reco_engine/.env
    environment:
      DB_HOST: db # override
      PIPENV_DONT_LOAD_ENV: 1
    depends_on:
      - db

  # -------------------------------------------------------------------------
  db:
  # -------------------------------------------------------------------------
    image: postgres:12-alpine
    container_name: db
    restart: unless-stopped
    networks:
      - default
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${DB_USER_LOGIN}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  # -------------------------------------------------------------------------
  ui:
  # -------------------------------------------------------------------------
    build:
      context: ./services/ui/
      args:
        configuration: ${ENVIRONMENT}
        server_name: ${DOCKER_IP}
    container_name: ui
    restart: unless-stopped
    expose:
      - 80
    networks:
      - default

  # -------------------------------------------------------------------------
  nginx:
  # -------------------------------------------------------------------------
    build: ./services/nginx
    restart: on-failure
    container_name: nginx
    networks:
      - default
    ports:
      - 80:80
    depends_on:
      - api
      - ui
